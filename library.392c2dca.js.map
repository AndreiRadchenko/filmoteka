{"mappings":"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","sources":["src/library.js","src/js/library/header.js","src/js/modal-detail-lib.js","src/js/library/gallery.js"],"sourcesContent":["import '../node_modules/@fortawesome/fontawesome-free/js/fontawesome';\nimport '../node_modules/@fortawesome/fontawesome-free/js/solid';\nimport '../node_modules/@fortawesome/fontawesome-free/js/brands';\n\n// import './js/modal-spinner';\nimport './js/library/header';\nimport './js/index/authenticate';\nimport './js/library/gallery';\nimport './js/index/footer';\n\nimport './js/modal-login';\n// import './js/modal-detail-lib';\nimport './js/button-up';\nimport './js/modal-team';\nimport './js/modal-trailer';\n\nimport './js/firebase/firebase';\nimport './js/moviedb/moviedb';\n","import refs from '../refs';\nimport { renderGalleryLib } from './gallery';\nimport cloudStorage from '../firebase/cloudstorage';\nconst { WATCHED, QUEUE, NOT_ADDED } = cloudStorage.tags;\n\nrefs.wachedBtn.addEventListener('click', onWatchedBtnClick);\nrefs.queueBtn.addEventListener('click', onQueueBtnClick);\n\nfunction onWatchedBtnClick() {\n  cloudStorage\n    .getUserCollections()\n    .then(films => {\n      const watchedFilms = films?.filter(film => film.tag === WATCHED);\n      //   console.log(watchedFilms);\n\n      refs.wachedBtn.classList.add('library__btn--currenly');\n      refs.queueBtn.classList.remove('library__btn--currenly');\n      if (watchedFilms?.length) {\n        renderGalleryLib(watchedFilms);\n      } else {\n        refs.filmGalleryLib.innerHTML =\n          ' <h2>There are no films in \"Watched\" collection\"</h2>';\n      }\n    })\n    .catch(error => {});\n}\n\nfunction onQueueBtnClick() {\n  cloudStorage\n    .getUserCollections()\n    .then(films => {\n      const queueFilms = films?.filter(film => film.tag === QUEUE);\n      //   console.log(queueFilms);\n\n      refs.wachedBtn.classList.remove('library__btn--currenly');\n      refs.queueBtn.classList.add('library__btn--currenly');\n      if (queueFilms?.length) {\n        renderGalleryLib(queueFilms);\n      } else {\n        refs.filmGalleryLib.innerHTML =\n          ' <h2>There are no films in \"Queue\" collection\"</h2>';\n      }\n    })\n    .catch(error => {});\n}\n","import movieService from './moviedb/moviedb';\nimport { spinnerPlay, spinnerStop } from './modal-spinner';\nimport cloudStorage from './firebase/cloudstorage';\nimport renderGalleryLib from '../js/library/gallery';\n// import refs from '../js/refs';\nconst { WATCHED, QUEUE, NOT_ADDED } = cloudStorage.tags;\n\nconst ADD = 'add';\nconst DELETE = 'delete';\n\nconst refs = {\n  body: document.querySelector('body'),\n  showBackdrop: document.querySelector('[data-detail-modal]'),\n  modalDetail: document.querySelector('.modal-detal__container'),\n  closeModalBtn: document.querySelector('.modal-detail__cross-frame'),\n  moviePoster: document.querySelector('.movie-poster'),\n  movieInfo: document.querySelector('.movie-data'),\n  modalDetailBackdrop: document.querySelector('.modal-detail__backdrop'),\n  filmGalleryLib: document.querySelector('.gallery-library'),\n};\n\nexport function renderModalDetail({ target }) {\n  if (target.classList.contains('gallery')) {\n    return;\n  }\n  spinnerPlay();\n  const filmCard = target.closest('[data-id]');\n  const id = filmCard.getAttribute('data-id');\n  this.id = '';\n  movieService\n    .getFilmsById(id)\n    .then(data => {\n      refs.showBackdrop.classList.remove('is-hidden');\n      const markup = modalDetailMarkup(data);\n      refs.modalDetail.innerHTML = markup;\n      cloudStorage.currentlyOpenedFilm.filmData = data;\n      (() => {\n        const refs = {\n          closeModalBtn: document.querySelector('.modal-detail__cross-frame'),\n          modalDetail: document.querySelector('[data-detail-modal]'),\n          moviePoster: document.querySelector('.movie-poster'),\n          movieInfo: document.querySelector('.movie-data'),\n          buttonWatched: document.querySelector('.button-watched'),\n          buttonQueue: document.querySelector('.button-queue'),\n        };\n\n        setButtonStyle({\n          buttonWatched: refs.buttonWatched,\n          buttonQueue: refs.buttonQueue,\n          id: data.id,\n        });\n\n        refs.closeModalBtn.addEventListener('click', closeModalDetail);\n        refs.buttonWatched.addEventListener('click', onButtonWatchedClick);\n        refs.buttonQueue.addEventListener('click', onButtonQueueClick);\n      })();\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n      document.body.classList.add('modal-open');\n      document.addEventListener('keydown', onModalDetailKeydown);\n      refs.modalDetailBackdrop.addEventListener(\n        'click',\n        onModalDetailBackdropClick\n      );\n      spinnerStop();\n    });\n}\n\nfunction closeModalDetail() {\n  refs.modalDetailBackdrop.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n  document.removeEventListener('keydown', onModalDetailKeydown);\n  refs.modalDetailBackdrop.removeEventListener(\n    'click',\n    onModalDetailBackdropClick\n  );\n  refreshLibrary();\n}\n\nfunction onModalDetailKeydown(event) {\n  if (event.code === 'Escape') {\n    closeModalDetail();\n  }\n}\n\nfunction onModalDetailBackdropClick(event) {\n  if (event.target === refs.modalDetailBackdrop) {\n    closeModalDetail();\n  }\n}\n\nasync function refreshLibrary() {\n  let currentLibrary;\n  try {\n    const btnWatchedCollection = document.querySelector('.js-btn-watched');\n    if (btnWatchedCollection.classList.contains('library__btn--currenly')) {\n      currentLibrary = WATCHED;\n    } else {\n      currentLibrary = QUEUE;\n    }\n    await cloudStorage\n      .getUserCollections()\n      .then(films => {\n        const filmsSorted = films?.filter(film => film.tag === currentLibrary);\n        //   console.log(watchedFilms);\n        if (filmsSorted.length) {\n          renderGalleryLib(filmsSorted);\n        } else {\n          refs.filmGalleryLib.innerHTML =\n            ' <h2>There are no films in \"Watched\" collection</h2>';\n        }\n      })\n      .catch(error => console.log(error));\n  } catch (error) {\n    console.log('on main page');\n    return;\n  }\n}\n\nasync function setButtonStyle({ buttonWatched, buttonQueue, id }) {\n  const tag = await cloudStorage.searchFilmInCollection(id);\n  if (tag === WATCHED) {\n    buttonWatched.textContent = 'Remove from watched';\n    buttonWatched.dataset.action = DELETE;\n    buttonWatched.classList.add('button-active');\n\n    buttonQueue.textContent = 'Add to queue';\n    buttonQueue.dataset.action = ADD;\n    buttonQueue.classList.remove('button-active');\n  } else if (tag === QUEUE) {\n    buttonWatched.textContent = 'Add to watched';\n    buttonWatched.dataset.action = ADD;\n    buttonWatched.classList.remove('button-active');\n\n    buttonQueue.textContent = 'Remove from queue';\n    buttonQueue.dataset.action = DELETE;\n    buttonQueue.classList.add('button-active');\n  } else {\n    buttonWatched.textContent = 'Add to watched';\n    buttonWatched.dataset.action = ADD;\n    buttonWatched.classList.remove('button-active');\n\n    buttonQueue.textContent = 'Add to queue';\n    buttonQueue.dataset.action = ADD;\n    buttonQueue.classList.remove('button-active');\n  }\n}\n\nasync function onButtonWatchedClick({ target: buttonWatched }) {\n  const modalContainer = document.querySelector('.modal-detal__container');\n  const buttonQueue = document.querySelector('.button-queue');\n  const watchedBtnState = buttonWatched.dataset.action;\n  const queueBtnState = buttonQueue.dataset.action;\n  if (watchedBtnState === ADD && queueBtnState === ADD) {\n    cloudStorage.addFilmToCollection(WATCHED);\n    buttonWatched.dataset.action = DELETE;\n    buttonWatched.textContent = 'Remove from watched';\n    buttonWatched.classList.add('button-active');\n  } else if (watchedBtnState === ADD && queueBtnState === DELETE) {\n    await cloudStorage.deleteFilmFromCollection(\n      cloudStorage.currentlyOpenedFilm.filmData.id\n    );\n    await cloudStorage.addFilmToCollection(WATCHED);\n    buttonWatched.dataset.action = DELETE;\n    buttonWatched.textContent = 'Remove from watched';\n    buttonWatched.classList.add('button-active');\n\n    buttonQueue.textContent = 'Add to queue';\n    buttonQueue.dataset.action = ADD;\n    buttonQueue.classList.remove('button-active');\n  } else if (watchedBtnState === DELETE) {\n    await cloudStorage.deleteFilmFromCollection(\n      cloudStorage.currentlyOpenedFilm.filmData.id\n    );\n    buttonWatched.dataset.action = ADD;\n    buttonWatched.textContent = 'Add to watched';\n    buttonWatched.classList.remove('button-active');\n  }\n  // modalContainer.click();\n}\n\nasync function onButtonQueueClick({ target: buttonQueue }) {\n  const modalContainer = document.querySelector('.modal-detal__container');\n  const buttonWatched = document.querySelector('.button-watched');\n  const watchedBtnState = buttonWatched.dataset.action;\n  const queueBtnState = buttonQueue.dataset.action;\n  if (queueBtnState === ADD && watchedBtnState === ADD) {\n    cloudStorage.addFilmToCollection(QUEUE);\n    buttonQueue.dataset.action = DELETE;\n    buttonQueue.textContent = 'Remove from queue';\n    buttonQueue.classList.add('button-active');\n  } else if (queueBtnState === ADD && watchedBtnState === DELETE) {\n    await cloudStorage.deleteFilmFromCollection(\n      cloudStorage.currentlyOpenedFilm.filmData.id\n    );\n    await cloudStorage.addFilmToCollection(QUEUE);\n    buttonQueue.dataset.action = DELETE;\n    buttonQueue.textContent = 'Remove from queue';\n    buttonQueue.classList.add('button-active');\n\n    buttonWatched.textContent = 'Add to watched';\n    buttonWatched.dataset.action = ADD;\n    buttonWatched.classList.remove('button-active');\n  } else if (queueBtnState === DELETE) {\n    await cloudStorage.deleteFilmFromCollection(\n      cloudStorage.currentlyOpenedFilm.filmData.id\n    );\n    buttonQueue.dataset.action = ADD;\n    buttonQueue.textContent = 'Add to queue';\n    buttonQueue.classList.remove('button-active');\n  }\n  // modalContainer.click();\n}\n\nconst modalDetailMarkup = ({\n  id,\n  poster_path,\n  title,\n  vote_average,\n  vote_count,\n  popularity,\n  original_title,\n  genres,\n  overview,\n}) => {\n  return ` <div class=\"modal-detail__cross-frame\">\n      <i class=\"fa-solid fa-xmark\"></i>\n    </div>\n  <div class=\"movie-poster\">\n  <img\n            class=\"movie-image\" data-id=\"${id}\"\n            src=\"https://image.tmdb.org/t/p/w500/${poster_path}\"\n            alt=\"\"\n          />\n               <div class=\"modal-detail__youtube\" data-modal-youtube>\n      <i class=\"fa-brands fa-youtube\"></i>\n    </div>\n          </div>\n           <div class=\"movie-data\">\n          <h2 class=\"data__title\">${title}</h2>\n          <ul class=\"data__list list\">\n            <li class=\"list__item\">\n              <p class=\"data__item\">Vote / Votes\n              </p>\n              <p class=\"data__info\">\n                <span class=\"data__span data__span--orange\">${vote_average}</span>\n                <span data__span--divider> / </span>\n                <span class=\"data__span\">${vote_count}</span>\n              </p>\n            </li>\n            <li class=\"list__item\">\n              <p class=\"data__item\">Popularity</p>\n              <p class=\"data__info\">${popularity}</p>\n            </li>\n            <li class=\"list__item\">\n              <p class=\"data__item\">Original Title</p>\n              <p class=\"data__info data__info--upper\">${original_title}</p>\n            </li>\n            <li class=\"list__item\">\n              <p class=\"data__item\">Genre</p>\n              <p class=\"data__info\">${genres\n                .map(genre => genre.name)\n                .join(', ')}</p>\n            </li>\n          </ul>\n          <p class=\"data__about\">About</p>\n          <p class=\"data__about-text\">${overview}</p>\n  <div class=\"buttons\">\n        <button\n          type=\"button\"\n          class=\"modal-detail__button button-watched\"\n          data-click=\"addToWached\"\n          data-action=\"add\"\n        >\n          Add to watched\n        </button>\n        <button\n          type=\"button\"\n          data-action=\"add\"\n          class=\"modal-detail__button button-queue\"\n          data-click=\"addToQueue\"\n        >\n          Add to queue\n        </button>\n      </div>\n    </div>`;\n};\n","import { renderModalDetail } from '../modal-detail-lib';\nimport refs from '../refs';\nimport cloudStorage from '../firebase/cloudstorage';\nimport { spinnerPlay, spinnerStop } from '../modal-spinner';\nconst { WATCHED, QUEUE, NOT_ADDED } = cloudStorage.tags;\n\nexport const renderGalleryLib = galleryArray => {\n  refs.filmGalleryLib.innerHTML = ' ';\n  const result = galleryArray\n    .map(\n      ({\n        poster_path,\n        original_title,\n        genre_ids,\n        release_date,\n        id,\n        vote_average,\n      }) => `<div class=\"film__card\" data-id=${id}>\n            <a class=\"film__link link\" href=\"\" onclick=\"event.preventDefault()\">\n            <img class=\"film__img\" src=\"https://image.tmdb.org/t/p/w500/${poster_path}\" alt=\"\" loading=\"lazy\" />\n            <div class=\"film__info\">\n                <h3 class=\"film__title\">\n                ${original_title}\n                </h3>\n                <div class=\"film__details\">\n            <div class=\"film__genre\">${genre_ids}</div>\n            <div class=\"film__year\">${release_date.substr(0, 4)}</div>\n            <div class=\"film__rating\">${vote_average.toFixed(1)}</div>\n            </div>\n            </div>\n            </a>\n        </div>`\n    )\n    .join('');\n  refs.filmGalleryLib.innerHTML = result;\n};\nspinnerPlay();\ncloudStorage\n  .getUserCollections()\n  .then(films => {\n    const watchedFilms = films?.filter(film => film.tag === WATCHED);\n    // console.log(watchedFilms);\n\n    refs.wachedBtn.classList.add('library__btn--currenly');\n    refs.queueBtn.classList.remove('library__btn--currenly');\n    if (!watchedFilms) {\n      refs.filmGalleryLib.innerHTML =\n        ' <h2>Please login to view personal collections</h2>';\n      return;\n    }\n    if (watchedFilms.length) {\n      renderGalleryLib(watchedFilms);\n    } else {\n      refs.filmGalleryLib.innerHTML =\n        ' <h2>There are no films in \"Watched\" collection</h2>';\n    }\n  })\n  .catch(error => {\n    if (error.message === 'No_USER') {\n      refs.wachedBtn.classList.add('disabled');\n      refs.queueBtn.classList.add('disabled');\n      refs.filmGalleryLib.innerHTML =\n        ' <h2>Please login to view personal collections</h2>';\n      return;\n    }\n  })\n  .finally(() => spinnerStop());\n\nrefs.filmGalleryLib.addEventListener('click', renderModalDetail);\n\nexport default renderGalleryLib;\n// refs.themeBtn.addEventListener('input', changeTheme);\n"],"names":["parcelRequire","$krGWQ","$iB1XX","WATCHED","$3974bf13c8183648$var$WATCHED","QUEUE","$3974bf13c8183648$var$QUEUE","NOT_ADDED","$3974bf13c8183648$var$NOT_ADDED","$jkUgE","default","tags","$3974bf13c8183648$var$refs","body","document","querySelector","showBackdrop","modalDetail","closeModalBtn","moviePoster","movieInfo","modalDetailBackdrop","filmGalleryLib","$3974bf13c8183648$var$closeModalDetail","classList","add","remove","removeEventListener","$3974bf13c8183648$var$onModalDetailKeydown","$3974bf13c8183648$var$onModalDetailBackdropClick","async","currentLibrary","btnWatchedCollection","contains","getUserCollections","then","films","filmsSorted","filter","film","tag","length","$f8f6f03a73b17409$export$2e2bcd8739ae039","innerHTML","catch","error","console","log","$3974bf13c8183648$var$refreshLibrary","event","code","target","$3974bf13c8183648$var$onButtonWatchedClick","buttonWatched","buttonQueue","watchedBtnState","dataset","action","queueBtnState","addFilmToCollection","textContent","deleteFilmFromCollection","currentlyOpenedFilm","filmData","id","$3974bf13c8183648$var$onButtonQueueClick","$3974bf13c8183648$var$modalDetailMarkup","poster_path","title","vote_average","vote_count","popularity","original_title","genres","overview","map","genre","name","join","$f8f6f03a73b17409$var$WATCHED","$f8f6f03a73b17409$var$QUEUE","$f8f6f03a73b17409$var$NOT_ADDED","$f8f6f03a73b17409$export$bbc79a193b8d13af","galleryArray","result","genre_ids","release_date","substr","toFixed","$1XX55","spinnerPlay","watchedFilms","wachedBtn","queueBtn","message","finally","spinnerStop","addEventListener","closest","getAttribute","this","getFilmsById","data","markup","refs1","searchFilmInCollection","$3974bf13c8183648$var$setButtonStyle","$9468df757e5232b7$var$WATCHED","$9468df757e5232b7$var$QUEUE","$9468df757e5232b7$var$NOT_ADDED","queueFilms"],"version":3,"file":"library.392c2dca.js.map"}